{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","key","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAGaA,G,MAAO,SAACC,GAAD,OAClB,yBAAKC,UAAU,kBACb,yBACEC,IAAI,UACJC,IAAK,kEAEP,gCAAMH,EAAMI,QAAQC,KAApB,KACA,+BAAKL,EAAMI,QAAQE,MAAnB,QCJSC,G,MAAW,SAACP,GAAD,OACtB,yBAAKC,UAAU,aACZD,EAAMQ,SAASC,KAAI,SAACL,GAAD,OAClB,kBAAC,EAAD,CAAMM,IAAKN,EAAQO,GAAIP,QAASA,UCLzBQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,2BACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCCG,G,MAzCf,kDACE,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IALH,EADhB,gEAUuB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEX,SAAUoB,SAbjD,+BAoBW,MAG2BC,KAAKN,MAA/Bf,EAHD,EAGCA,SAAUY,EAHX,EAGWA,YACZU,EAAmBtB,EAASuB,QAAO,SAAC3B,GAAD,OACvCA,EAAQC,KAAK2B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,yBAAK/B,UAAU,OACb,+CACA,kBAAC,EAAD,CACEY,YAAY,kBACZC,aAAce,KAAKf,eAErB,kBAAC,EAAD,CAAUN,SAAUsB,SAnC5B,GAAyBI,cCFzBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.734ecf18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"monster\"\r\n      src={\"https://robohash.org/{props.monster.id}?set=set3&size=180x180\"}\r\n    />\r\n    <h1> {props.monster.name} </h1>\r\n    <p> {props.monster.email} </p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => (\r\n  <div className=\"card-list\">\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\nexport class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    // const monster = this.state.monsters;\n    // const searchFields = this.state.searchFields;\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster project</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}